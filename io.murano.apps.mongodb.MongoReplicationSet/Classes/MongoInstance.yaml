Namespaces:
  =: io.murano.apps.mongodb
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system
  apps: io.murano.apps


Name: MongoInstance

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()

  repset:
    Contract: $.string().notNull()

  instance:
    Contract: $.class(res:Instance).notNull()

  hostname:
    Contract: $.string()
    Usage: Out

Workflow:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: !yaql "not bool($.getAttr(deployed))"
        Then:
          - $log: $this.find(std:Environment).reporter
          - $securityGroupIngress:
              - ToPort: 27017
                FromPort: 27017
                IpProtocol: tcp
                External: True
              - ToPort: 28017
                FromPort: 28017
                IpProtocol: tcp
                External: True
          - $.environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $log.report($this,'Creating VM for MongoDB server')
          - $.instance.deploy()
          - $log.report($this,'Installing MongoDB server')
          - $resources: new(sys:Resources)

          - $template: $resources.yaml('DeployMongo.template').bind(dict(
                repset => $.repset
              ))
          - $.instance.agent.call($template, $resources)

          - $template: $resources.yaml('GetHostname.template')
          - $hostname: $.instance.agent.call($template, $resources)
          - $.hostname: $hostname + ':' + $.instance.ipAddresses[0]

          - $log.report($this,'MongoDB instance installation is complete')
          - $.setAttr(deployed, True)


  updateHosts:
    Arguments:
      hosts:
        Contract: $.string()
    Body:
      - $this.find(std:Environment).reporter.report($this, 'Updating hosts file.')
      - $resources: new(sys:Resources)
      - $template: $resources.yaml('UpdateHosts.template').bind(dict(
              hosts => $hosts
            ))
      - $.instance.agent.call($template, $resources)