Namespaces:
  =: io.murano.apps.mongodb
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system
  apps: io.murano.apps


Name: MongoReplicationSet

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()

  repset:
    Contract: $.string().notNull()

  instances:
    Contract:
    - $.class(res:Instance).check($.networks.useEnvironmentNetwork=true)

Workflow:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: !yaql "not bool($.getAttr(deployed))"
        Then:
          - $log: $this.find(std:Environment).reporter
          - $securityGroupIngress:
              - ToPort: 27017
                FromPort: 27017
                IpProtocol: tcp
                External: True
              - ToPort: 28017
                FromPort: 28017
                IpProtocol: tcp
                External: True
          - $.environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $log.report($this,'Creating VMs')
          - $.instances.pselect($.deploy())
          - $log.report($this,'Installing MongoDB')
          - $resources: new(sys:Resources)

          - $template: $resources.yaml('DeployMongo.template').bind(dict(
              repset => $.repset
             ))
          - $.instances.pselect($.agent.call($template, $resources))
          - $log.report($this,'Installation is complete')
          - $.setAttr(deployed, True)
