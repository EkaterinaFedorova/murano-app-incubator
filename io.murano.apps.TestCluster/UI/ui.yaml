Version: 2

Templates:
  instance:
    ?:
      type: io.murano.resources.LinuxMuranoInstance
    name: generateHostname($.appConfiguration.unitNamingPattern, $index)
    flavor: $.instanceConfiguration.flavor
    image: $.instanceConfiguration.osImage
    keyname: $.instanceConfiguration.keyPair
    assignFloatingIp: False


Application:
  ?:
    type: io.murano.apps.TestCluster
  sharedIp1:
    ?:
      type:  io.murano.SharedIp
    assignFloatingIp: $.appConfiguration.assignFloatingIP
  sharedIp2:
    ?:
      type:  io.murano.SharedIp
    assignFloatingIp: $.appConfiguration.assignFloatingIP
  instances: repeat($instance, $.appConfiguration.numInstances)

Forms:
  - appConfiguration:
      fields:
        - name: numInstances
          type: integer
          label: Instance Count
          minValue: 1
          maxValue: 100
          initial: 1
          helpText: Enter an integer value between 1 and 100
        - name: unitNamingPattern
          type: string
          label: Hostname template
          description: >-
            For your convenience all instance hostnames can be named
            in the same way. Enter a name and use # character for incrementation.
            For example, host# turns into host1, host2, etc. Please follow Windows
            hostname restrictions.
          required: false
          regexpValidator: '^(([a-zA-Z0-9#][a-zA-Z0-9-#]*[a-zA-Z0-9#])\.)*([A-Za-z0-9#]|[A-Za-z0-9#][A-Za-z0-9-#]*[A-Za-z0-9#])$'
          # FIXME: does not work for # turning into 2-digit numbers
          maxLength: 15
          helpText: Optional field for a machine hostname template
          # temporaryHack
          widgetMedia:
            js: ['muranodashboard/js/support_placeholder.js']
            css: {all: ['muranodashboard/css/support_placeholder.css']}
        - name: assignFloatingIP
          type: boolean
          label: Assign Floating IP
          description: >-
             Select to true to assign floating IP automatically
          initial: false
          required: false
          widgetMedia:
            css: {all: ['muranodashboard/css/checkbox.css']}
      validators:
        # if unitNamingPattern is given and dcInstances > 1, then '#' should occur in unitNamingPattern
        - expr: $.appConfiguration.numInstances < 2 or not $.appConfiguration.unitNamingPattern.bool() or '#' in $.appConfiguration.unitNamingPattern
          message: Incrementation symbol "#" is required in the Hostname template
  - instanceConfiguration:
      fields:
        - name: title
          type: string
          required: false
          hidden: true
          descriptionTitle: Instance Configuration
          description: Specify some instance parameters on which service would be created.
        - name: flavor
          type: flavor
          label: Instance flavor
          description: >-
            Select registered in Openstack flavor. Consider that service performance
            depends on this parameter.
          required: false
        - name: osImage
          type: image
          imageType: linux
          label: Instance image
          description: >-
            Select valid image for a service. Image should already be prepared and
            registered in glance.
        - name: availabilityZone
          type: azone
          label: Availability zone
          description: Select availability zone where service would be installed.
          required: false
