Namespaces:
  =: io.murano.apps.activestate
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system
  apps: io.murano.apps


Name: StackatoDEACluster

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()

  node:
    Contract: $.class('io.murano.apps.activestate.StackatoNodeCluster').notNull()

  core:
    Contract: $.class('io.murano.apps.activestate.StackatoCore').notNull()

  host:
    Contract: $.string()
    Usage: Out

  monitoring:
    Contract: $.class('io.murano.apps.monitoring.MonitoringService')

Workflow:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $.environment.reporter.report($this, 'Creating a VM ')
          - $.node.deploy()
          - $.core.deploy()
          - Try:
              - $.node.setupNodes(
                  role => 'dea',
                  core_ip => $.core.host,
                  apiURL => $.core.apiURL
                  )
            Catch:
              - With: 'murano.engine.system.agent.AgentException'
                As: exc
                Do:
                  - $.core.restart()
                  - $.node.setupNodes(
                        role => 'dea',
                        core_ip => $.core.host,
                        apiURL => $.core.apiURL
                        )
          - $.environment.reporter.report($this, 'DEA cluster is created')
          - $.setupMonitoring()
          - $.setAttr(deployed, true)

  scaleUp:
    Usage: Action
    Body:
      - $.node.scaleUp(
        role => 'dea',
        core_ip => $.core.host
        )

  setupMonitoring:
    Body:
      - If: $.monitoring != null
        Then:
          - $.environment.reporter.report($this, 'Adding nodes to the monitoring system')
          - $.monitoring.deploy()
          - For: inst
            In: $.node.instances.take($.node.currentCount)
            Do:
              - $.monitoring.setupCheck(instance => $inst,
                                        action_object => $this,
                                        action_name => 'none')