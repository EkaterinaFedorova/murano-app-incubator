Version: 2
Templates:
#  loadbalancer:
#     ?:
#       type: io.murano.traffic.NeutronLoadBalancer
#     name: 'guestbook-lb'
#     balancingMethod: ROUND_ROBIN
#     port: 3000

  service:
     ?:
       type: io.murano.apps.docker.Kubernetes.Service
     name: 'guestbook'
     kubernetes: $.appConfiguration.kubernetes
     port:  3000
     containerPort: 3000
#     loadBalancer: $loadbalancer
     externalLB: false
     enabled: true
     selector:
       name: 'guestbook'

  pod:
    ?:
      type: io.murano.apps.docker.Kubernetes.POD
    name: 'guestbook'
    labels:
      name: 'guestbook'
    kubernetes: $.appConfiguration.kubernetes
    replication: true
    replicationFactor: $.appConfiguration.replication_factor
    exposePort: true

Application:
  ?:
    type: io.murano.apps.docker.Kubernetes.GuestBook
  name: 'guestbook'

  docker: $pod
  service: $service
  image: 'kubernetes/guestbook'
  port: 3000
  redisMaster: $.redis_config.master
  redisSlave: $.redis_config.slave


Forms:
  - appConfiguration:
      fields:
        - name: name
          type: string
          label: Application Name
          initial: 'guestbook'
          description: >-
            Enter a desired name for the application. Just A-Z, a-z, 0-9, dash and
            underline are allowed
        - name: replication_factor
          type: integer
          label: Number of front end servers
          initial: 2
          required: true
          description: >-
            GuestBook appication deploys frontend serice which might consist of several PODs (FrontEnd servers)
        - name: kubernetes
          type: io.murano.apps.docker.Kubernetes
          label: Kubernetes cluster
          required: true
          description: >-
            GuestBook application is a Kubernetes application which requires Kubernetes infrastructure.
            Kubernetes cluster is required for this application to be app and running.
  - redis_config:
      fields:
        - name: master
          type: io.murano.apps.docker.Kubernetes.RedisMaster
          label: Redis Master Service
          description: >-
            GuestBook application uses Redis backend service. Redis backend is a master-slave configuration.
            Please select Redis Master component which will be used by the application for Read\Write operations.
        - name: slave
          type: io.murano.apps.docker.Kubernetes.RedisSlave
          label: Redis Slave Service
          description: >-
            GuestBook application uses Redis backend service. Redis backend is a master-slave configuration.
            Please select Redis Slave component which will be used by the application for Read operations.


